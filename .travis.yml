sudo: required
language: cpp
dist: trusty
os: linux

git:
  depth: 1

matrix:
  include:
    - env: DOC=1 COMPILER=clang++-8
      addons:
        ssh_known_hosts: eliaskosunen.com
        apt:
          sources:
            - llvm-toolchain-trusty-8
            - ubuntu-toolchain-r-test
          packages:
            - clang++-8
            - llvm-8-dev
            - g++-8
            - libboost-all-dev

    - env: COMPILER=g++-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
    - env: COMPILER=g++-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
    - env: COMPILER=g++-6
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
    - env: COMPILER=g++-5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5

    - env: COMPILER=clang++-8
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-8
            - ubuntu-toolchain-r-test
          packages:
            - clang++-8
            - g++-7
    - env: COMPILER=clang++-7
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-7
            - ubuntu-toolchain-r-test
          packages:
            - clang++-7
            - g++-7
    - env: COMPILER=clang++-6.0
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang++-6.0
            - g++-7
    - env: COMPILER=clang++-5.0
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages:
            - clang++-5.0
            - g++-7
    - env: COMPILER=clang++-4.0
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages:
            - clang++-4.0
            - g++-7

    - env: COMPILER=clang++
      os: osx
      osx_image: xcode9.2
      compiler: clang
    - env: COMPILER=g++
      os: osx
      compiler: gcc

before_install:
  - |
    if [[ -z "${DOC}" ]]; then
      BUILD_DOC=0
    else
      BUILD_DOC=1
      mkdir -p standardese && cd standardese

      git clone --recurse-submodules https://github.com/foonathan/standardese
      cd standardese
      mkdir build
      cd build

      cmake -DCMAKE_CXX_COMPILER=${COMPILER} ..
      make -j
      STANDARDESE_TOOL="$(pwd)/tool/standardese"

      cd ${TRAVIS_BUILD_DIR}
    fi
script:
  - |
    if [[ "${TRAVIS_OS_NAME}" = "linux" ]]; then
      sudo apt-get install uuid-dev
    fi
  - |
    mkdir build
    cd build
    cmake -DCMAKE_CXX_COMPILER=${COMPILER} -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    if [[ "${BUILD_DOC}" = 1 ]]; then
      cd ../doc
      ./generate-doc.sh ${STANDARDESE_TOOL}
    else
      make -j
      ctest -V
    fi
before_deploy:
  - cd ${TRAVIS_BUILD_DIR}
  - openssl aes-256-cbc -K $encrypted_90b0ef582e14_key -iv $encrypted_90b0ef582e14_iv -in deploy_rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa
deploy:
  provider: script
  skip_cleanup: true
  script: rsync -r --delete-after --quiet ${TRAVIS_BUILD_DIR}/doc/html/* upload@eliaskosunen.com:/var/www/docs.eliaskosunen.com/crossguid
  on:
    branch: master
    condition: $BUILD_DOC = 1
